version: "3.8"
services:
  postgres:
    container_name: postgres
    image: postgres:14.5
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=zerocater
    volumes:
      - postgres_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d zerocater"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
  setup:
    container_name: setup
    build:
      context: ./
      dockerfile: ./services/setup/Dockerfile
    logging:
      driver: "none"
    healthcheck:
      test: ["CMD-SHELL", "curl -X GET http://localhost:3000"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
  server:
    container_name: server
    build: 
      context: ./
      dockerfile: ./services/server/Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      setup:
        condition: service_healthy
  data_collection:
    container_name: data_collection
    build:
      context: ./
      dockerfile: ./services/data_collection/Dockerfile
    depends_on:
      setup:
        condition: service_healthy
  order_meals:
    container_name: order_meals
    build:
      context: ./
      dockerfile: ./services/order_meals/Dockerfile
    depends_on:
      setup:
        condition: service_healthy
  
volumes:
  postgres_db:
